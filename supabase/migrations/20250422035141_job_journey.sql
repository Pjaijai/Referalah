create sequence "public"."job_journey_id_seq";

create sequence "public"."job_journey_step_id_seq";

create sequence "public"."location_id_seq";

revoke delete on table "public"."notification" from "anon";

revoke insert on table "public"."notification" from "anon";

revoke references on table "public"."notification" from "anon";

revoke select on table "public"."notification" from "anon";

revoke trigger on table "public"."notification" from "anon";

revoke truncate on table "public"."notification" from "anon";

revoke update on table "public"."notification" from "anon";



create table "public"."company" (
    "id" bigint generated by default as identity not null,
    "name" text not null,
    "logo_url" character varying,
    "created_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc'::text)
);


alter table "public"."company" enable row level security;

create table "public"."job_journey" (
    "id" integer not null default nextval('job_journey_id_seq'::regclass),
    "uuid" uuid default gen_random_uuid(),
    "company_id" integer,
    "position_title" character varying(255) not null,
    "source" character varying(50) not null,
    "industry_uuid" uuid not null,
    "location_uuid" uuid not null,
    "job_type" character varying(50) not null,
    "job_level" character varying(50) not null,
    "application_submitted_date" date not null,
    "visibility" character varying(20) not null default 'private'::character varying,
    "status" character varying(20) not null default 'active'::character varying,
    "created_by" uuid not null,
    "created_at" timestamp without time zone not null default CURRENT_TIMESTAMP,
    "updated_at" timestamp without time zone,
    "last_step_status" character varying(50),
    "last_step_status_updated_at" timestamp without time zone,
    "company_name" text,
    "title" text not null,
    "description" text not null,
    "fire_count" bigint not null default '0'::bigint
);


alter table "public"."job_journey" enable row level security;

create table "public"."job_journey_step" (
    "id" integer not null default nextval('job_journey_step_id_seq'::regclass),
    "uuid" uuid default gen_random_uuid(),
    "job_journey_uuid" uuid not null,
    "step_date" date not null,
    "step_type" character varying(50) not null,
    "interview_type" character varying(50),
    "interview_location" character varying(50),
    "remarks" text,
    "position" integer not null,
    "created_by" uuid not null,
    "created_at" timestamp without time zone not null default CURRENT_TIMESTAMP,
    "updated_at" timestamp without time zone
);


alter table "public"."job_journey_step" enable row level security;

create table "public"."location" (
    "id" integer not null default nextval('location_id_seq'::regclass),
    "uuid" uuid not null default gen_random_uuid(),
    "value" character varying not null,
    "english_name" character varying not null,
    "cantonese_name" character varying not null,
    "level" integer not null,
    "parent_uuid" uuid,
    "country_uuid" uuid,
    "meta_data" jsonb not null default '{"emoji": null}'::jsonb
);


alter table "public"."location" enable row level security;

alter sequence "public"."job_journey_id_seq" owned by "public"."job_journey"."id";

alter sequence "public"."job_journey_step_id_seq" owned by "public"."job_journey_step"."id";

alter sequence "public"."location_id_seq" owned by "public"."location"."id";

CREATE UNIQUE INDEX company_id_key ON public.company USING btree (id);

CREATE UNIQUE INDEX company_pkey ON public.company USING btree (id);

CREATE UNIQUE INDEX job_journey_pkey ON public.job_journey USING btree (id);

CREATE UNIQUE INDEX job_journey_step_pkey ON public.job_journey_step USING btree (id);

CREATE UNIQUE INDEX job_journey_step_uuid_key ON public.job_journey_step USING btree (uuid);

CREATE UNIQUE INDEX job_journey_uuid_key ON public.job_journey USING btree (uuid);

CREATE UNIQUE INDEX location_pkey ON public.location USING btree (id);

CREATE UNIQUE INDEX location_uuid_key ON public.location USING btree (uuid);

alter table "public"."company" add constraint "company_pkey" PRIMARY KEY using index "company_pkey";

alter table "public"."job_journey" add constraint "job_journey_pkey" PRIMARY KEY using index "job_journey_pkey";

alter table "public"."job_journey_step" add constraint "job_journey_step_pkey" PRIMARY KEY using index "job_journey_step_pkey";

alter table "public"."location" add constraint "location_pkey" PRIMARY KEY using index "location_pkey";

alter table "public"."company" add constraint "company_id_key" UNIQUE using index "company_id_key";

alter table "public"."job_journey" add constraint "job_journey_company_id_fkey" FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE RESTRICT not valid;

alter table "public"."job_journey" validate constraint "job_journey_company_id_fkey";

alter table "public"."job_journey" add constraint "job_journey_created_by_fkey" FOREIGN KEY (created_by) REFERENCES "user"(uuid) ON DELETE RESTRICT not valid;

alter table "public"."job_journey" validate constraint "job_journey_created_by_fkey";

alter table "public"."job_journey" add constraint "job_journey_uuid_key" UNIQUE using index "job_journey_uuid_key";

alter table "public"."job_journey" add constraint "public_job_journey_industry_uuid_fkey" FOREIGN KEY (industry_uuid) REFERENCES industry(uuid) not valid;

alter table "public"."job_journey" validate constraint "public_job_journey_industry_uuid_fkey";

alter table "public"."job_journey" add constraint "public_job_journey_location_uuid_fkey" FOREIGN KEY (location_uuid) REFERENCES location(uuid) not valid;

alter table "public"."job_journey" validate constraint "public_job_journey_location_uuid_fkey";

alter table "public"."job_journey_step" add constraint "job_journey_step_created_by_fkey" FOREIGN KEY (created_by) REFERENCES "user"(uuid) ON DELETE RESTRICT not valid;

alter table "public"."job_journey_step" validate constraint "job_journey_step_created_by_fkey";

alter table "public"."job_journey_step" add constraint "job_journey_step_job_journey_uuid_fkey" FOREIGN KEY (job_journey_uuid) REFERENCES job_journey(uuid) ON DELETE CASCADE not valid;

alter table "public"."job_journey_step" validate constraint "job_journey_step_job_journey_uuid_fkey";

alter table "public"."job_journey_step" add constraint "job_journey_step_position_check" CHECK (("position" > 0)) not valid;

alter table "public"."job_journey_step" validate constraint "job_journey_step_position_check";

alter table "public"."job_journey_step" add constraint "job_journey_step_uuid_key" UNIQUE using index "job_journey_step_uuid_key";

alter table "public"."location" add constraint "location_country_uuid_fkey" FOREIGN KEY (country_uuid) REFERENCES location(uuid) not valid;

alter table "public"."location" validate constraint "location_country_uuid_fkey";

alter table "public"."location" add constraint "location_level_check" CHECK ((level >= 1)) not valid;

alter table "public"."location" validate constraint "location_level_check";

alter table "public"."location" add constraint "location_parent_uuid_fkey" FOREIGN KEY (parent_uuid) REFERENCES location(uuid) not valid;

alter table "public"."location" validate constraint "location_parent_uuid_fkey";

alter table "public"."location" add constraint "location_uuid_key" UNIQUE using index "location_uuid_key";

grant delete on table "public"."company" to "anon";

grant insert on table "public"."company" to "anon";

grant references on table "public"."company" to "anon";

grant select on table "public"."company" to "anon";

grant trigger on table "public"."company" to "anon";

grant truncate on table "public"."company" to "anon";

grant update on table "public"."company" to "anon";

grant delete on table "public"."company" to "authenticated";

grant insert on table "public"."company" to "authenticated";

grant references on table "public"."company" to "authenticated";

grant select on table "public"."company" to "authenticated";

grant trigger on table "public"."company" to "authenticated";

grant truncate on table "public"."company" to "authenticated";

grant update on table "public"."company" to "authenticated";

grant delete on table "public"."company" to "service_role";

grant insert on table "public"."company" to "service_role";

grant references on table "public"."company" to "service_role";

grant select on table "public"."company" to "service_role";

grant trigger on table "public"."company" to "service_role";

grant truncate on table "public"."company" to "service_role";

grant update on table "public"."company" to "service_role";

grant delete on table "public"."job_journey" to "anon";

grant insert on table "public"."job_journey" to "anon";

grant references on table "public"."job_journey" to "anon";

grant select on table "public"."job_journey" to "anon";

grant trigger on table "public"."job_journey" to "anon";

grant truncate on table "public"."job_journey" to "anon";

grant update on table "public"."job_journey" to "anon";

grant delete on table "public"."job_journey" to "authenticated";

grant insert on table "public"."job_journey" to "authenticated";

grant references on table "public"."job_journey" to "authenticated";

grant select on table "public"."job_journey" to "authenticated";

grant trigger on table "public"."job_journey" to "authenticated";

grant truncate on table "public"."job_journey" to "authenticated";

grant update on table "public"."job_journey" to "authenticated";

grant delete on table "public"."job_journey" to "service_role";

grant insert on table "public"."job_journey" to "service_role";

grant references on table "public"."job_journey" to "service_role";

grant select on table "public"."job_journey" to "service_role";

grant trigger on table "public"."job_journey" to "service_role";

grant truncate on table "public"."job_journey" to "service_role";

grant update on table "public"."job_journey" to "service_role";

grant delete on table "public"."job_journey_step" to "anon";

grant insert on table "public"."job_journey_step" to "anon";

grant references on table "public"."job_journey_step" to "anon";

grant select on table "public"."job_journey_step" to "anon";

grant trigger on table "public"."job_journey_step" to "anon";

grant truncate on table "public"."job_journey_step" to "anon";

grant update on table "public"."job_journey_step" to "anon";

grant delete on table "public"."job_journey_step" to "authenticated";

grant insert on table "public"."job_journey_step" to "authenticated";

grant references on table "public"."job_journey_step" to "authenticated";

grant select on table "public"."job_journey_step" to "authenticated";

grant trigger on table "public"."job_journey_step" to "authenticated";

grant truncate on table "public"."job_journey_step" to "authenticated";

grant update on table "public"."job_journey_step" to "authenticated";

grant delete on table "public"."job_journey_step" to "service_role";

grant insert on table "public"."job_journey_step" to "service_role";

grant references on table "public"."job_journey_step" to "service_role";

grant select on table "public"."job_journey_step" to "service_role";

grant trigger on table "public"."job_journey_step" to "service_role";

grant truncate on table "public"."job_journey_step" to "service_role";

grant update on table "public"."job_journey_step" to "service_role";

grant delete on table "public"."location" to "anon";

grant insert on table "public"."location" to "anon";

grant references on table "public"."location" to "anon";

grant select on table "public"."location" to "anon";

grant trigger on table "public"."location" to "anon";

grant truncate on table "public"."location" to "anon";

grant update on table "public"."location" to "anon";

grant delete on table "public"."location" to "authenticated";

grant insert on table "public"."location" to "authenticated";

grant references on table "public"."location" to "authenticated";

grant select on table "public"."location" to "authenticated";

grant trigger on table "public"."location" to "authenticated";

grant truncate on table "public"."location" to "authenticated";

grant update on table "public"."location" to "authenticated";

grant delete on table "public"."location" to "service_role";

grant insert on table "public"."location" to "service_role";

grant references on table "public"."location" to "service_role";

grant select on table "public"."location" to "service_role";

grant trigger on table "public"."location" to "service_role";

grant truncate on table "public"."location" to "service_role";

grant update on table "public"."location" to "service_role";

create policy "All user can read"
on "public"."company"
as permissive
for select
to anon, authenticated
using (true);


create policy "All user can read"
on "public"."job_journey"
as permissive
for select
to anon, authenticated
using (true);


create policy "All user can read"
on "public"."job_journey_step"
as permissive
for select
to anon, authenticated
using (true);


create policy "All user can read"
on "public"."location"
as permissive
for select
to anon, authenticated
using (true);



